{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/quiz.service\";\nimport * as i3 from \"@angular/common\";\nfunction QuestionFormComponent_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 8)(2, \"label\");\n    i0.ɵɵtext(3, \" Answer \");\n    i0.ɵɵelement(4, \"input\", 9)(5, \"br\");\n    i0.ɵɵtext(6, \" Correct \");\n    i0.ɵɵelement(7, \"input\", 10);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControlName\", \"value\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControlName\", \"isCorrect\");\n  }\n}\nexport class QuestionFormComponent {\n  constructor(formBuilder, quizService) {\n    this.formBuilder = formBuilder;\n    this.quizService = quizService;\n    // Form creation\n    this.initializeQuestionForm();\n  }\n  initializeQuestionForm() {\n    this.questionForm = this.formBuilder.group({\n      label: ['', Validators.required],\n      answers: this.formBuilder.array([])\n    });\n  }\n  ngOnInit() {}\n  get answers() {\n    return this.questionForm.get('answers');\n  }\n  createAnswer() {\n    return this.formBuilder.group({\n      value: '',\n      isCorrect: false\n    });\n  }\n  addAnswer() {\n    this.answers.push(this.createAnswer());\n  }\n  addQuestion() {\n    if (this.questionForm.valid) {\n      const question = this.questionForm.getRawValue();\n      this.quizService.addQuestion(this.quiz, question);\n      this.initializeQuestionForm();\n    }\n  }\n}\nQuestionFormComponent.ɵfac = function QuestionFormComponent_Factory(t) {\n  return new (t || QuestionFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.QuizService));\n};\nQuestionFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuestionFormComponent,\n  selectors: [[\"app-question-form\"]],\n  inputs: {\n    quiz: \"quiz\"\n  },\n  decls: 15,\n  vars: 3,\n  consts: [[1, \"card\"], [1, \"quiz-form\", 3, \"formGroup\"], [\"for\", \"label\"], [\"type\", \"text\", \"id\", \"label\", 1, \"input-custom\", 3, \"formControlName\"], [1, \"button-card\", 3, \"click\"], [\"formArrayName\", \"answers\", 1, \"answer\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"submit\", 1, \"button-card\", 3, \"click\"], [1, \"answer-form\", 3, \"formGroupName\"], [\"type\", \"text\", 3, \"formControlName\"], [\"type\", \"checkbox\", 3, \"formControlName\"]],\n  template: function QuestionFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Create a new question\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \" Title \");\n      i0.ɵɵelement(6, \"br\")(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"button\", 4);\n      i0.ɵɵlistener(\"click\", function QuestionFormComponent_Template_button_click_9_listener() {\n        return ctx.addAnswer();\n      });\n      i0.ɵɵtext(10, \"Add Answer\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"div\", 5);\n      i0.ɵɵtemplate(12, QuestionFormComponent_div_12_Template, 8, 3, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"button\", 7);\n      i0.ɵɵlistener(\"click\", function QuestionFormComponent_Template_button_click_13_listener() {\n        return ctx.addQuestion();\n      });\n      i0.ɵɵtext(14, \"Create\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.questionForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControlName\", \"label\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngForOf\", ctx.answers.controls);\n    }\n  },\n  dependencies: [i3.NgForOf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i1.FormGroupName, i1.FormArrayName],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 2px;\\n  display: inline-block;\\n  margin: 1rem;\\n  position: relative;\\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.08), 0 0 6px rgba(0, 0, 0, 0.05);\\n  padding: 0 1em 1em 1em;\\n}\\n\\n.button-card[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border: solid 1px #3f51b5;\\n  color: #3f51b5;\\n  font-weight: bold;\\n  padding: 0.5em 1em;\\n}\\n\\n.button-card[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n}\\n\\n.answer-form[_ngcontent-%COMP%] {\\n  margin-top: 0.3em;\\n  margin-bottom: 0.3em;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvY2FyZC5zY3NzIiwid2VicGFjazovLy4vc3JjL3N0eWxlcy92YXJpYWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVlc3Rpb25zL3F1ZXN0aW9uLWZvcm0vcXVlc3Rpb24tZm9ybS5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFFQTtFQUNFLGlCQ0RNO0VERU4sa0JBQUE7RUFDQSxxQkFBQTtFQUNBLFlBQUE7RUFDQSxrQkFBQTtFQUNBLHVFQUFBO0VBQ0Esc0JBQUE7QUVERjs7QUZJQTtFQUNFLHVCQ1hNO0VEWU4seUJBQUE7RUFDQSxjQ2RLO0VEZUwsaUJBQUE7RUFDQSxrQkFBQTtBRURGOztBRklBO0VBQ0UsZUFBQTtBRURGOztBQWxCQTtFQUNJLGlCQUFBO0VBQ0Esb0JBQUE7QUFxQkoiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi92YXJpYWJsZXNcIjtcclxuXHJcbi5jYXJkIHtcclxuICBiYWNrZ3JvdW5kOiAkd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBtYXJnaW46IDFyZW07XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGJveC1zaGFkb3c6IDAgNnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjA4KSwgMCAwIDZweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xyXG4gIHBhZGRpbmc6IDAgMWVtIDFlbSAxZW07XHJcbn1cclxuXHJcbi5idXR0b24tY2FyZCB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG4gIGJvcmRlcjogc29saWQgMXB4ICRibHVlO1xyXG4gIGNvbG9yOiAkYmx1ZTtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxuICBwYWRkaW5nOiAwLjVlbSAxZW07XHJcbn1cclxuXHJcbi5idXR0b24tY2FyZDpob3ZlciB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG59XHJcbiIsIiRhcHAtYmFja2dyb3VuZC1jb2xvcjogI2YyZjJmMjtcclxuJGJsdWU6ICMzZjUxYjU7XHJcbiR3aGl0ZTogd2hpdGU7XHJcbiIsIkBpbXBvcnQgJy4uLy4uLy4uL3N0eWxlcy9jYXJkLnNjc3MnO1xyXG5cclxuLmFuc3dlci1mb3JtIHtcclxuICAgIG1hcmdpbi10b3A6IDAuM2VtO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMC4zZW07XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n});","map":{"version":3,"mappings":"AACA,SAA4CA,UAAU,QAAQ,gBAAgB;;;;;;;ICSxEC,2BAA2D;IAGrDA,wBACA;IAAAA,2BAA+C;IAE/CA,yBACA;IAAAA,4BAAuD;IACzDA,iBAAQ;;;;IAPeA,eAAmB;IAAnBA,oCAAmB;IAGrBA,eAA2B;IAA3BA,yCAA2B;IAGvBA,eAA+B;IAA/BA,6CAA+B;;;ADNlE,OAAM,MAAOC,qBAAqB;EAOhCC,YAAmBC,WAAwB,EAAUC,WAAwB;IAA1D,gBAAW,GAAXD,WAAW;IAAuB,gBAAW,GAAXC,WAAW;IAC9D;IACA,IAAI,CAACC,sBAAsB,EAAE;EAC/B;EAEQA,sBAAsB;IAC5B,IAAI,CAACC,YAAY,GAAG,IAAI,CAACH,WAAW,CAACI,KAAK,CAAC;MACzCC,KAAK,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MAChCC,OAAO,EAAE,IAAI,CAACP,WAAW,CAACQ,KAAK,CAAC,EAAE;KACnC,CAAC;EACJ;EAEAC,QAAQ,IACR;EAEA,IAAIF,OAAO;IACT,OAAO,IAAI,CAACJ,YAAY,CAACO,GAAG,CAAC,SAAS,CAAc;EACtD;EAEQC,YAAY;IAClB,OAAO,IAAI,CAACX,WAAW,CAACI,KAAK,CAAC;MAC5BQ,KAAK,EAAE,EAAE;MACTC,SAAS,EAAE;KACZ,CAAC;EACJ;EAEAC,SAAS;IACP,IAAI,CAACP,OAAO,CAACQ,IAAI,CAAC,IAAI,CAACJ,YAAY,EAAE,CAAC;EACxC;EAEAK,WAAW;IACT,IAAI,IAAI,CAACb,YAAY,CAACc,KAAK,EAAE;MAC3B,MAAMC,QAAQ,GAAG,IAAI,CAACf,YAAY,CAACgB,WAAW,EAAc;MAC5D,IAAI,CAAClB,WAAW,CAACe,WAAW,CAAC,IAAI,CAACI,IAAI,EAAEF,QAAQ,CAAC;MACjD,IAAI,CAAChB,sBAAsB,EAAE;;EAEjC;;;mBA3CWJ,qBAAqB;AAAA;;QAArBA,qBAAqB;EAAAuB;EAAAC;IAAAF;EAAA;EAAAG;EAAAC;EAAAC;EAAAC;IAAA;MCXlC7B,8BAAkB;MACZA,qCAAqB;MAAAA,iBAAK;MAC9BA,+BAAmD;MAE/CA,uBAAM;MAAAA,qBAAI;MAEZA,iBAAQ;MACRA,qBAAI;MACJA,iCAAkD;MAAtBA;QAAA,OAAS8B,eAAW;MAAA,EAAC;MAAC9B,2BAAU;MAAAA,iBAAS;MACrEA,+BAA4C;MAC1CA,wEAUM;MACRA,iBAAM;MACNA,kCAAkE;MAAxBA;QAAA,OAAS8B,iBAAa;MAAA,EAAC;MAAC9B,uBAAM;MAAAA,iBAAS;;;MApB3DA,eAA0B;MAA1BA,4CAA0B;MAGKA,eAA2B;MAA3BA,yCAA2B;MAKrDA,eAAqB;MAArBA,8CAAqB","names":["Validators","i0","QuestionFormComponent","constructor","formBuilder","quizService","initializeQuestionForm","questionForm","group","label","required","answers","array","ngOnInit","get","createAnswer","value","isCorrect","addAnswer","push","addQuestion","valid","question","getRawValue","quiz","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\elias\\OneDrive\\Bureau\\2022-2023-ps6-les-quiziniers\\front-end\\src\\app\\questions\\question-form\\question-form.component.ts","C:\\Users\\elias\\OneDrive\\Bureau\\2022-2023-ps6-les-quiziniers\\front-end\\src\\app\\questions\\question-form\\question-form.component.html"],"sourcesContent":["import { Component, OnInit, Input } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormArray, Validators } from '@angular/forms';\r\nimport { QuizService } from '../../../services/quiz.service';\r\nimport { Quiz } from 'src/models/quiz.model';\r\nimport { Question } from 'src/models/question.model';\r\n\r\n@Component({\r\n  selector: 'app-question-form',\r\n  templateUrl: './question-form.component.html',\r\n  styleUrls: ['./question-form.component.scss']\r\n})\r\nexport class QuestionFormComponent implements OnInit {\r\n\r\n  @Input()\r\n  quiz: Quiz;\r\n\r\n  public questionForm: FormGroup;\r\n\r\n  constructor(public formBuilder: FormBuilder, private quizService: QuizService) {\r\n    // Form creation\r\n    this.initializeQuestionForm();\r\n  }\r\n\r\n  private initializeQuestionForm(): void {\r\n    this.questionForm = this.formBuilder.group({\r\n      label: ['', Validators.required],\r\n      answers: this.formBuilder.array([])\r\n    });\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  get answers(): FormArray {\r\n    return this.questionForm.get('answers') as FormArray;\r\n  }\r\n\r\n  private createAnswer(): FormGroup {\r\n    return this.formBuilder.group({\r\n      value: '',\r\n      isCorrect: false,\r\n    });\r\n  }\r\n\r\n  addAnswer(): void {\r\n    this.answers.push(this.createAnswer());\r\n  }\r\n\r\n  addQuestion(): void {\r\n    if (this.questionForm.valid) {\r\n      const question = this.questionForm.getRawValue() as Question;\r\n      this.quizService.addQuestion(this.quiz, question);\r\n      this.initializeQuestionForm();\r\n    }\r\n  }\r\n}\r\n","<div class=\"card\">\r\n  <h2>Create a new question</h2>\r\n  <form class=\"quiz-form\" [formGroup]=\"questionForm\">\r\n    <label for=\"label\">\r\n      Title <br>\r\n      <input class=\"input-custom\" type=\"text\" id=\"label\" [formControlName]=\"'label'\">\r\n    </label>\r\n    <br>\r\n    <button class=\"button-card\" (click)=\"addAnswer()\">Add Answer</button>\r\n    <div class=\"answer\" formArrayName=\"answers\">\r\n      <div *ngFor=\"let address of answers.controls; let i=index\">\r\n        <div class=\"answer-form\" [formGroupName]=\"i\">\r\n          <label>\r\n            Answer\r\n            <input type=\"text\" [formControlName]=\"'value'\">\r\n            <br>\r\n            Correct\r\n            <input type=\"checkbox\" [formControlName]=\"'isCorrect'\">\r\n          </label>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button type=\"submit\" class=\"button-card\" (click)=\"addQuestion()\">Create</button>\r\n  </form>\r\n</div>\r\n\r\n<!-- Uncomment below to see your form structure and how it changes-->\r\n<!-- <br><br>{{quizForm.getRawValue() | json}} -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}