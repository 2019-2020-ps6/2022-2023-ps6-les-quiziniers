{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../services/quiz.service\";\nexport class QuizFormComponent {\n  constructor(formBuilder, quizService) {\n    this.formBuilder = formBuilder;\n    this.quizService = quizService;\n    this.quizForm = this.formBuilder.group({\n      name: [''],\n      theme: ['']\n    });\n    // You can also add validators to your inputs such as required, maxlength or even create your own validator!\n    // More information: https://angular.io/guide/reactive-forms#simple-form-validation\n    // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\n  }\n\n  ngOnInit() {}\n  addQuiz() {\n    // We retrieve here the quiz object from the quizForm and we cast the type \"as Quiz\".\n    const quizToCreate = this.quizForm.getRawValue();\n    this.quizService.addQuiz(quizToCreate);\n  }\n}\nQuizFormComponent.ɵfac = function QuizFormComponent_Factory(t) {\n  return new (t || QuizFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.QuizService));\n};\nQuizFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: QuizFormComponent,\n  selectors: [[\"app-quiz-form\"]],\n  decls: 16,\n  vars: 3,\n  consts: [[1, \"card\"], [1, \"quiz-form\", 3, \"formGroup\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"name\", 1, \"input-custom\", 3, \"formControlName\"], [\"for\", \"theme\"], [\"type\", \"text\", \"id\", \"theme\", 1, \"input-custom\", 3, \"formControlName\"], [\"type\", \"submit\", 1, \"button-card\", 3, \"click\"]],\n  template: function QuizFormComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Create a new Quiz\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"label\", 2);\n      i0.ɵɵtext(5, \" Title \");\n      i0.ɵɵelement(6, \"br\")(7, \"input\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(8, \"br\");\n      i0.ɵɵelementStart(9, \"label\", 4);\n      i0.ɵɵtext(10, \" Theme \");\n      i0.ɵɵelement(11, \"br\")(12, \"input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(13, \"br\");\n      i0.ɵɵelementStart(14, \"button\", 6);\n      i0.ɵɵlistener(\"click\", function QuizFormComponent_Template_button_click_14_listener() {\n        return ctx.addQuiz();\n      });\n      i0.ɵɵtext(15, \"Create\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.quizForm);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"formControlName\", \"name\");\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"formControlName\", \"theme\");\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\".card[_ngcontent-%COMP%] {\\n  background: white;\\n  border-radius: 2px;\\n  display: inline-block;\\n  margin: 1rem;\\n  position: relative;\\n  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.08), 0 0 6px rgba(0, 0, 0, 0.05);\\n  padding: 0 1em 1em 1em;\\n}\\n\\n.button-card[_ngcontent-%COMP%] {\\n  background-color: white;\\n  border: solid 1px #3f51b5;\\n  color: #3f51b5;\\n  font-weight: bold;\\n  padding: 0.5em 1em;\\n}\\n\\n.button-card[_ngcontent-%COMP%]:hover {\\n  cursor: pointer;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvY2FyZC5zY3NzIiwid2VicGFjazovLy4vc3JjL3N0eWxlcy92YXJpYWJsZXMuc2NzcyIsIndlYnBhY2s6Ly8uL3NyYy9hcHAvcXVpenplcy9xdWl6LWZvcm0vcXVpei1mb3JtLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBO0VBQ0UsaUJDRE07RURFTixrQkFBQTtFQUNBLHFCQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsdUVBQUE7RUFDQSxzQkFBQTtBRURGOztBRklBO0VBQ0UsdUJDWE07RURZTix5QkFBQTtFQUNBLGNDZEs7RURlTCxpQkFBQTtFQUNBLGtCQUFBO0FFREY7O0FGSUE7RUFDRSxlQUFBO0FFREYiLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiLi92YXJpYWJsZXNcIjtcblxuLmNhcmQge1xuICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gIGJvcmRlci1yYWRpdXM6IDJweDtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xuICBtYXJnaW46IDFyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgYm94LXNoYWRvdzogMCA2cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMDgpLCAwIDAgNnB4IHJnYmEoMCwgMCwgMCwgMC4wNSk7XG4gIHBhZGRpbmc6IDAgMWVtIDFlbSAxZW07XG59XG5cbi5idXR0b24tY2FyZCB7XG4gIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcbiAgYm9yZGVyOiBzb2xpZCAxcHggJGJsdWU7XG4gIGNvbG9yOiAkYmx1ZTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHBhZGRpbmc6IDAuNWVtIDFlbTtcbn1cblxuLmJ1dHRvbi1jYXJkOmhvdmVyIHtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuIiwiJGFwcC1iYWNrZ3JvdW5kLWNvbG9yOiAjZjJmMmYyO1xuJGJsdWU6ICMzZjUxYjU7XG4kd2hpdGU6IHdoaXRlO1xuIiwiLmNhcmQge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyLXJhZGl1czogMnB4O1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIG1hcmdpbjogMXJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2hhZG93OiAwIDZweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4wOCksIDAgMCA2cHggcmdiYSgwLCAwLCAwLCAwLjA1KTtcbiAgcGFkZGluZzogMCAxZW0gMWVtIDFlbTtcbn1cblxuLmJ1dHRvbi1jYXJkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogc29saWQgMXB4ICMzZjUxYjU7XG4gIGNvbG9yOiAjM2Y1MWI1O1xuICBmb250LXdlaWdodDogYm9sZDtcbiAgcGFkZGluZzogMC41ZW0gMWVtO1xufVxuXG4uYnV0dG9uLWNhcmQ6aG92ZXIge1xuICBjdXJzb3I6IHBvaW50ZXI7XG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;AAWA,OAAM,MAAOA,iBAAiB;EAW5BC,YAAmBC,WAAwB,EAASC,WAAwB;IAAzD,gBAAW,GAAXD,WAAW;IAAsB,gBAAW,GAAXC,WAAW;IAC7D,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACF,WAAW,CAACG,KAAK,CAAC;MACrCC,IAAI,EAAE,CAAC,EAAE,CAAC;MACVC,KAAK,EAAE,CAAC,EAAE;KACX,CAAC;IACF;IACA;IACA;EACF;;EAEAC,QAAQ,IACR;EAEAC,OAAO;IACL;IACA,MAAMC,YAAY,GAAS,IAAI,CAACN,QAAQ,CAACO,WAAW,EAAU;IAE9D,IAAI,CAACR,WAAW,CAACM,OAAO,CAACC,YAAY,CAAC;EACxC;;AA7BWV,iBAAiB;mBAAjBA,iBAAiB;AAAA;AAAjBA,iBAAiB;QAAjBA,iBAAiB;EAAAY;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX9BC,8BAAkB;MACZA,iCAAiB;MAAAA,iBAAK;MAC1BA,+BAA+C;MAE3CA,uBAAM;MAAAA,qBAAI;MAEZA,iBAAQ;MACRA,qBAAI;MACJA,gCAAmB;MACjBA,wBAAM;MAAAA,sBAAI;MAEZA,iBAAQ;MACRA,sBAAI;MACJA,kCAA8D;MAApBA;QAAA,OAASC,aAAS;MAAA,EAAC;MAACD,uBAAM;MAAAA,iBAAS;;;MAXvDA,eAAsB;MAAtBA,wCAAsB;MAGQA,eAA0B;MAA1BA,wCAA0B;MAKzBA,eAA2B;MAA3BA,yCAA2B","names":["QuizFormComponent","constructor","formBuilder","quizService","quizForm","group","name","theme","ngOnInit","addQuiz","quizToCreate","getRawValue","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\amirb\\Desktop\\2022-2023-ps6-les-quiziniers\\front-end\\src\\app\\quizzes\\quiz-form\\quiz-form.component.ts","C:\\Users\\amirb\\Desktop\\2022-2023-ps6-les-quiziniers\\front-end\\src\\app\\quizzes\\quiz-form\\quiz-form.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\nimport { QuizService } from '../../../services/quiz.service';\nimport { Quiz } from '../../../models/quiz.model';\n\n@Component({\n  selector: 'app-quiz-form',\n  templateUrl: './quiz-form.component.html',\n  styleUrls: ['./quiz-form.component.scss']\n})\nexport class QuizFormComponent implements OnInit {\n\n  // Note: We are using here ReactiveForms to create our form. Be careful when you look for some documentation to\n  // avoid TemplateDrivenForm (another type of form)\n\n  /**\n   * QuizForm: Object which manages the form in our component.\n   * More information about Reactive Forms: https://angular.io/guide/reactive-forms#step-1-creating-a-formgroup-instance\n   */\n  public quizForm: FormGroup;\n\n  constructor(public formBuilder: FormBuilder, public quizService: QuizService) {\n    this.quizForm = this.formBuilder.group({\n      name: [''],\n      theme: ['']\n    });\n    // You can also add validators to your inputs such as required, maxlength or even create your own validator!\n    // More information: https://angular.io/guide/reactive-forms#simple-form-validation\n    // Advanced validation: https://angular.io/guide/form-validation#reactive-form-validation\n  }\n\n  ngOnInit(): void {\n  }\n\n  addQuiz(): void {\n    // We retrieve here the quiz object from the quizForm and we cast the type \"as Quiz\".\n    const quizToCreate: Quiz = this.quizForm.getRawValue() as Quiz;\n\n    this.quizService.addQuiz(quizToCreate);\n  }\n\n}\n","<div class=\"card\">\n  <h2>Create a new Quiz</h2>\n  <form class=\"quiz-form\" [formGroup]=\"quizForm\">\n    <label for=\"title\">\n      Title <br>\n      <input class=\"input-custom\" type=\"text\" id=\"name\" [formControlName]=\"'name'\">\n    </label>\n    <br>\n    <label for=\"theme\">\n      Theme <br>\n      <input class=\"input-custom\" type=\"text\" id=\"theme\" [formControlName]=\"'theme'\">\n    </label>\n    <br>\n    <button type=\"submit\" class=\"button-card\" (click)=\"addQuiz()\">Create</button>\n  </form>\n</div>\n<!-- Uncomment below to see your form structure and how it changes-->\n<!-- <br><br>{{quizForm.getRawValue() | json}} -->"]},"metadata":{},"sourceType":"module","externalDependencies":[]}