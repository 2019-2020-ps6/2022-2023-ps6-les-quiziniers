services:
  backend:
    container_name: backend
    image: backend
    build:
      context: backend
      dockerfile: backend/Dockerfile
    ports:
      - "9428:9428"
    restart: always
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:9428 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

  frontend:
    container_name: frontend
    image: frontend
    volumes:
      - ./front-end/default.conf:/etc/nginx/conf.d/default.conf
    build:
      context: front-end
      dockerfile: front-end/Dockerfile
      args:
        TESTURL: "http://localhost:8000"
        API_URL: "http://localhost:8000"
        ENVIRONMENT: production
    ports:
      - "80:80"
    restart: always
    depends_on:
      - backend
    healthcheck:
      test: [ "CMD-SHELL", "curl -f http://localhost:8080 || exit 1" ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network
  reverseproxy:
    image: nginx:1.13
    container_name: reverseproxy
    ports:
      - "8080:80"
    links:
      - frontend
      - backend
    volumes:
      - ./front-end/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    environment:
        - NGINX_HOST=localhost
        - NGINX_PORT=80
        - NGINX_PROXY=http://frontend:80
        - NGINX_PROXY2=http://backend:9428
    networks:
      - app-network

networks:
  app-network:
    driver: bridge